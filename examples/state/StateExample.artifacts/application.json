{
    "hints": {
        "get_app_state_val": {
            "read_only": true
        },
        "get_dynamic_app_state_val": {
            "read_only": true
        },
        "get_account_state_val": {
            "read_only": true
        },
        "get_dynamic_account_state_val": {
            "read_only": true
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "schema": {
        "local": {
            "declared": {
                "declared_account_value": {
                    "type": "uint64",
                    "key": "declared_account_value",
                    "descr": "An int stored for each account that opts in"
                }
            },
            "reserved": {
                "dynamic_account_value": {
                    "type": "bytes",
                    "max_keys": 8,
                    "descr": "A dynamic state value, allowing 8 keys to be reserved, in this case byte type"
                }
            }
        },
        "global": {
            "declared": {
                "declared_app_value": {
                    "type": "bytes",
                    "key": "declared_app_value",
                    "descr": "A static declared variable, nothing at the protocol level protects it, only the methods defined on ApplicationState do"
                }
            },
            "reserved": {
                "dynamic_app_value": {
                    "type": "uint64",
                    "max_keys": 32,
                    "descr": "A dynamic app state variable, with 32 possible keys"
                }
            }
        }
    },
    "contract": {
        "name": "StateExample",
        "methods": [
            {
                "name": "write_acct_blob",
                "args": [
                    {
                        "type": "string",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "read_acct_blob",
                "args": [],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "write_app_blob",
                "args": [
                    {
                        "type": "string",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "read_app_blob",
                "args": [],
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "set_app_state_val",
                "args": [
                    {
                        "type": "string",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_app_state_val",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "set_dynamic_app_state_val",
                "args": [
                    {
                        "type": "uint8",
                        "name": "k"
                    },
                    {
                        "type": "uint64",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_dynamic_app_state_val",
                "args": [
                    {
                        "type": "uint8",
                        "name": "k"
                    }
                ],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "set_account_state_val",
                "args": [
                    {
                        "type": "uint64",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "incr_account_state_val",
                "args": [
                    {
                        "type": "uint64",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_account_state_val",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "set_dynamic_account_state_val",
                "args": [
                    {
                        "type": "uint8",
                        "name": "k"
                    },
                    {
                        "type": "string",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_dynamic_account_state_val",
                "args": [
                    {
                        "type": "uint8",
                        "name": "k"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    }
}