#pragma version 8
intcblock 0 1
bytecblock 0x00 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xa4e8d795 // "place_order(uint8,(string,uint16))void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x3fca3a49 // "read_item(uint8)(string,uint16)"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0xf4b057d9 // "increase_quantity(uint8)(string,uint16)"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub increasequantity_4
store 4
bytec_1 // 0x151f7c75
load 4
concat
log
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub readitem_3
store 2
bytec_1 // 0x151f7c75
load 2
concat
log
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 0
txna ApplicationArgs 2
store 1
load 0
load 1
callsub placeorder_2
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
txn OnCompletion
intc_1 // OptIn
==
bnz main_l11
err
main_l11:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optin_1
intc_1 // 1
return
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
intc_1 // 1
return

// opt_in
optin_1:
retsub

// place_order
placeorder_2:
store 10
store 9
txn Sender
bytec_0 // 0x00
intc_0 // 0
load 9
setbyte
load 10
app_local_put
retsub

// read_item
readitem_3:
store 3
txn Sender
bytec_0 // 0x00
intc_0 // 0
load 3
setbyte
app_local_get
retsub

// increase_quantity
increasequantity_4:
store 5
txn Sender
bytec_0 // 0x00
intc_0 // 0
load 5
setbyte
app_local_get
store 6
load 6
pushint 2 // 2
extract_uint16
store 7
load 7
intc_1 // 1
+
store 7
load 7
pushint 65536 // 65536
<
assert
load 6
load 6
intc_0 // 0
extract_uint16
dig 1
len
substring3
store 8
pushint 4 // 4
itob
extract 6 0
load 7
itob
extract 6 0
concat
load 8
concat
store 6
txn Sender
bytec_0 // 0x00
intc_0 // 0
load 5
setbyte
load 6
app_local_put
load 6
retsub