name: "Build workflow"
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: formatting
        run: poetry run black --check .

      - name: linting
        run: poetry run flake8

      - name: type-checking
        run: poetry run mypy

      - name: gen-check
        run: source .venv/bin/activate && ./scripts/gen.sh -c

      - name: Clone Algorand Sandbox
        run: cd .. && git clone https://github.com/algorand/sandbox.git

      - name: copy config
        run: cp config.test ../sandbox/

      - name: Run Algorand Sandbox
        shell: 'script -q -e -c "bash {0}"' # hacky hack to make TTY work
        run: cd ../sandbox && ./sandbox up test -v 

      - name: Delay before testing
        run: sleep 10

      - name: Tests
        run: poetry run pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=app tests/ | tee pytest-coverage.txt

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml

      - name: Stop running images
        run: cd ../sandbox && ./sandbox down 
